--- STDOUT ---
INFO 06-25 15:17:57 [__init__.py:244] Automatically detected platform cuda.
When dataset path is not set, it will default to random dataset
Namespace(backend='vllm', dataset_name='random', dataset=None, dataset_path=None, input_len=256, output_len=256, n=1, num_prompts=200, hf_max_batch_size=None, output_json=None, async_engine=False, disable_frontend_multiprocessing=False, disable_detokenize=False, lora_path=None, prefix_len=None, random_range_ratio=None, hf_subset=None, hf_split=None, model='google/gemma-3-27b-it', task='auto', tokenizer='google/gemma-3-27b-it', tokenizer_mode='auto', trust_remote_code=False, dtype='auto', seed=0, hf_config_path=None, allowed_local_media_path='', revision=None, code_revision=None, rope_scaling={}, rope_theta=None, tokenizer_revision=None, max_model_len=512, quantization='fp8', enforce_eager=False, max_seq_len_to_capture=8192, max_logprobs=20, disable_sliding_window=False, disable_cascade_attn=False, skip_tokenizer_init=False, enable_prompt_embeds=False, served_model_name=None, disable_async_output_proc=False, config_format='auto', hf_token=None, hf_overrides={}, override_neuron_config={}, override_pooler_config=None, logits_processor_pattern=None, generation_config='auto', override_generation_config={}, enable_sleep_mode=False, model_impl='auto', load_format='auto', download_dir=None, model_loader_extra_config={}, ignore_patterns=None, use_tqdm_on_load=True, qlora_adapter_name_or_path=None, pt_load_map_location='cpu', guided_decoding_backend='auto', guided_decoding_disable_fallback=False, guided_decoding_disable_any_whitespace=False, guided_decoding_disable_additional_properties=False, enable_reasoning=None, reasoning_parser='', distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=2, data_parallel_size=1, data_parallel_size_local=None, data_parallel_address=None, data_parallel_rpc_port=None, data_parallel_backend='mp', enable_expert_parallel=False, max_parallel_loading_workers=None, ray_workers_use_nsight=False, disable_custom_all_reduce=False, worker_cls='auto', worker_extension_cls='', enable_multimodal_encoder_data_parallel=False, block_size=None, gpu_memory_utilization=0.9, swap_space=4, kv_cache_dtype='auto', num_gpu_blocks_override=None, enable_prefix_caching=None, prefix_caching_hash_algo='builtin', cpu_offload_gb=0, calculate_kv_scales=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config={}, limit_mm_per_prompt={}, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=None, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=None, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', speculative_config=None, show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None, max_num_batched_tokens=None, max_num_seqs=None, max_num_partial_prefills=1, max_long_partial_prefills=1, cuda_graph_sizes=[512], long_prefill_token_threshold=0, num_lookahead_slots=0, scheduler_delay_factor=0.0, preemption_mode=None, num_scheduler_steps=1, multi_step_stream_outputs=True, scheduling_policy='fcfs', enable_chunked_prefill=None, disable_chunked_mm_input=False, scheduler_cls='vllm.core.scheduler.Scheduler', disable_hybrid_kv_cache_manager=False, kv_transfer_config=None, kv_events_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":null,"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":null,"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":null,"local_cache_dir":null}, additional_config={}, use_v2_block_manager=True, disable_log_stats=False, disable_log_requests=False)
INFO 06-25 15:18:07 [config.py:823] This model supports multiple tasks: {'embed', 'classify', 'reward', 'generate', 'score'}. Defaulting to 'generate'.
INFO 06-25 15:18:07 [config.py:1946] Defaulting to use mp for distributed inference
INFO 06-25 15:18:07 [config.py:2195] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 06-25 15:18:09 [core.py:455] Waiting for init message from front-end.
INFO 06-25 15:18:09 [core.py:70] Initializing a V1 LLM engine (v0.9.1) with config: model='google/gemma-3-27b-it', speculative_config=None, tokenizer='google/gemma-3-27b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=512, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=fp8, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=google/gemma-3-27b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
WARNING 06-25 15:18:09 [multiproc_worker_utils.py:307] Reducing Torch parallelism from 112 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 06-25 15:18:09 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_00f88eea'), local_subscribe_addr='ipc:///tmp/d108046f-9906-4441-b3cc-fc42f65f3eae', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:18:09 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x753c7f4596d0>
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:09 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_14b012bd'), local_subscribe_addr='ipc:///tmp/35055552-97f4-464a-98df-95c8fc1a95f4', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:18:09 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x753c7f4616d0>
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:09 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_70a2e847'), local_subscribe_addr='ipc:///tmp/cbd4772b-6da9-4bf1-9ae8-82720bdbb2aa', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:15 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:15 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:15 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:15 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:45 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:45 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:45 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_7ebbaef4'), local_subscribe_addr='ipc:///tmp/79750f68-1e7c-4eed-9e15-cd632b398503', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:45 [parallel_state.py:1065] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:45 [parallel_state.py:1065] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorker rank=0 pid=83220)[0;0m WARNING 06-25 15:18:50 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:50 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=1 pid=83221)[0;0m WARNING 06-25 15:18:50 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:50 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:51 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:51 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:51 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:51 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:51 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:51 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:51 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:51 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:59 [default_loader.py:272] Loading weights took 7.67 seconds
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:59 [default_loader.py:272] Loading weights took 7.68 seconds
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:59 [gpu_model_runner.py:1624] Model loading took 13.9147 GiB and 8.202978 seconds
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:59 [gpu_model_runner.py:1624] Model loading took 13.9147 GiB and 8.224474 seconds
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:18:59 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:18:59 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:19:17 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/61d3286e32/rank_0_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:19:17 [backends.py:472] Dynamo bytecode transform time: 14.77 s
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:19:17 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/61d3286e32/rank_1_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:19:17 [backends.py:472] Dynamo bytecode transform time: 14.77 s
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:19:21 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:19:21 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:20:12 [backends.py:173] Compiling a graph for general shape takes 53.38 s
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:20:12 [backends.py:173] Compiling a graph for general shape takes 53.38 s
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:21:00 [monitor.py:34] torch.compile takes 68.15 s in total
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:21:00 [monitor.py:34] torch.compile takes 68.15 s in total
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:21:02 [gpu_worker.py:227] Available KV cache memory: 134.53 GiB
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:21:02 [gpu_worker.py:227] Available KV cache memory: 134.53 GiB
WARNING 06-25 15:21:02 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:21:02 [kv_cache_utils.py:870] GPU KV cache size: 503,792 tokens
INFO 06-25 15:21:02 [kv_cache_utils.py:874] Maximum concurrency for 512 tokens per request: 958.30x
WARNING 06-25 15:21:02 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:21:02 [kv_cache_utils.py:870] GPU KV cache size: 503,792 tokens
INFO 06-25 15:21:02 [kv_cache_utils.py:874] Maximum concurrency for 512 tokens per request: 958.30x
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:21:33 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:21:33 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=1 pid=83221)[0;0m INFO 06-25 15:21:33 [gpu_model_runner.py:2048] Graph capturing finished in 30 secs, took 1.21 GiB
[1;36m(VllmWorker rank=0 pid=83220)[0;0m INFO 06-25 15:21:33 [gpu_model_runner.py:2048] Graph capturing finished in 30 secs, took 1.21 GiB
INFO 06-25 15:21:33 [core.py:171] init engine (profile, create kv cache, warmup model) took 153.34 seconds
Throughput: 23.08 requests/s, 11816.64 total tokens/s, 5908.32 output tokens/s
Total num prompt tokens:  51200
Total num output tokens:  51200

--- STDERR ---
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=1 pid=83221)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/12 [00:00<?, ?it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  17% Completed | 2/12 [00:00<00:03,  2.57it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  25% Completed | 3/12 [00:01<00:04,  1.91it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  33% Completed | 4/12 [00:02<00:04,  1.67it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  42% Completed | 5/12 [00:02<00:04,  1.56it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  50% Completed | 6/12 [00:03<00:03,  1.52it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  58% Completed | 7/12 [00:04<00:03,  1.65it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  67% Completed | 8/12 [00:04<00:02,  1.57it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  75% Completed | 9/12 [00:05<00:01,  1.52it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  83% Completed | 10/12 [00:06<00:01,  1.49it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards:  92% Completed | 11/12 [00:06<00:00,  1.48it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards: 100% Completed | 12/12 [00:07<00:00,  1.45it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m Loading safetensors checkpoint shards: 100% Completed | 12/12 [00:07<00:00,  1.57it/s]
[1;36m(VllmWorker rank=0 pid=83220)[0;0m 
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
Adding requests:   0%|          | 0/200 [00:00<?, ?it/s]Adding requests:  54%|█████▍    | 108/200 [00:00<00:00, 1072.75it/s]Adding requests: 100%|██████████| 200/200 [00:00<00:00, 1152.90it/s]
Processed prompts:   0%|          | 0/200 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/200 [00:08<27:52,  8.40s/it, est. speed input: 30.46 toks/s, output: 30.46 toks/s]Processed prompts: 100%|██████████| 200/200 [00:08<00:00, 23.55it/s, est. speed input: 6029.73 toks/s, output: 6029.72 toks/s]
