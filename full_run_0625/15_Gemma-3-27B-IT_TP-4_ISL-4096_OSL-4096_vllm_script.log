--- STDOUT ---
INFO 06-25 15:50:09 [__init__.py:244] Automatically detected platform cuda.
When dataset path is not set, it will default to random dataset
Namespace(backend='vllm', dataset_name='random', dataset=None, dataset_path=None, input_len=4096, output_len=4096, n=1, num_prompts=200, hf_max_batch_size=None, output_json=None, async_engine=False, disable_frontend_multiprocessing=False, disable_detokenize=False, lora_path=None, prefix_len=None, random_range_ratio=None, hf_subset=None, hf_split=None, model='google/gemma-3-27b-it', task='auto', tokenizer='google/gemma-3-27b-it', tokenizer_mode='auto', trust_remote_code=False, dtype='auto', seed=0, hf_config_path=None, allowed_local_media_path='', revision=None, code_revision=None, rope_scaling={}, rope_theta=None, tokenizer_revision=None, max_model_len=8192, quantization='fp8', enforce_eager=False, max_seq_len_to_capture=8192, max_logprobs=20, disable_sliding_window=False, disable_cascade_attn=False, skip_tokenizer_init=False, enable_prompt_embeds=False, served_model_name=None, disable_async_output_proc=False, config_format='auto', hf_token=None, hf_overrides={}, override_neuron_config={}, override_pooler_config=None, logits_processor_pattern=None, generation_config='auto', override_generation_config={}, enable_sleep_mode=False, model_impl='auto', load_format='auto', download_dir=None, model_loader_extra_config={}, ignore_patterns=None, use_tqdm_on_load=True, qlora_adapter_name_or_path=None, pt_load_map_location='cpu', guided_decoding_backend='auto', guided_decoding_disable_fallback=False, guided_decoding_disable_any_whitespace=False, guided_decoding_disable_additional_properties=False, enable_reasoning=None, reasoning_parser='', distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=4, data_parallel_size=1, data_parallel_size_local=None, data_parallel_address=None, data_parallel_rpc_port=None, data_parallel_backend='mp', enable_expert_parallel=False, max_parallel_loading_workers=None, ray_workers_use_nsight=False, disable_custom_all_reduce=False, worker_cls='auto', worker_extension_cls='', enable_multimodal_encoder_data_parallel=False, block_size=None, gpu_memory_utilization=0.9, swap_space=4, kv_cache_dtype='auto', num_gpu_blocks_override=None, enable_prefix_caching=None, prefix_caching_hash_algo='builtin', cpu_offload_gb=0, calculate_kv_scales=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config={}, limit_mm_per_prompt={}, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=None, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=None, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', speculative_config=None, show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None, max_num_batched_tokens=None, max_num_seqs=None, max_num_partial_prefills=1, max_long_partial_prefills=1, cuda_graph_sizes=[512], long_prefill_token_threshold=0, num_lookahead_slots=0, scheduler_delay_factor=0.0, preemption_mode=None, num_scheduler_steps=1, multi_step_stream_outputs=True, scheduling_policy='fcfs', enable_chunked_prefill=None, disable_chunked_mm_input=False, scheduler_cls='vllm.core.scheduler.Scheduler', disable_hybrid_kv_cache_manager=False, kv_transfer_config=None, kv_events_config=None, compilation_config={"level":0,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":[],"use_inductor":true,"compile_sizes":null,"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":0,"cudagraph_capture_sizes":null,"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":null,"local_cache_dir":null}, additional_config={}, use_v2_block_manager=True, disable_log_stats=False, disable_log_requests=False)
INFO 06-25 15:50:21 [config.py:823] This model supports multiple tasks: {'reward', 'score', 'classify', 'embed', 'generate'}. Defaulting to 'generate'.
INFO 06-25 15:50:21 [config.py:1946] Defaulting to use mp for distributed inference
INFO 06-25 15:50:21 [config.py:2195] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 06-25 15:50:23 [core.py:455] Waiting for init message from front-end.
INFO 06-25 15:50:23 [core.py:70] Initializing a V1 LLM engine (v0.9.1) with config: model='google/gemma-3-27b-it', speculative_config=None, tokenizer='google/gemma-3-27b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=fp8, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=google/gemma-3-27b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
WARNING 06-25 15:50:23 [multiproc_worker_utils.py:307] Reducing Torch parallelism from 112 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 06-25 15:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1, 2, 3], buffer_handle=(4, 16777216, 10, 'psm_61875452'), local_subscribe_addr='ipc:///tmp/39e220aa-c1dd-4417-aa1a-d6a3202eefd5', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:50:23 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f6405e85490>
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_ca7392b9'), local_subscribe_addr='ipc:///tmp/b0d45b07-eb6e-4b53-9de6-fc76c8e697a3', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:50:23 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f63ff58e960>
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_cc48cd11'), local_subscribe_addr='ipc:///tmp/a3d005d5-82ee-45da-8f77-55795d382247', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:50:23 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f63ff5615b0>
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_c96e99c1'), local_subscribe_addr='ipc:///tmp/b4957741-1e28-42ee-85cc-a1eb5d0f4881', remote_subscribe_addr=None, remote_addr_ipv6=False)
WARNING 06-25 15:50:23 [utils.py:2737] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f5fc9f7e210>
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_556aba5c'), local_subscribe_addr='ipc:///tmp/46059c9b-7c21-49a8-a9f5-526f5dc9ec48', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:50:31 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:50:31 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:50:31 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:50:31 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:50:31 [utils.py:1126] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:50:31 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:50:31 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:50:31 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:02 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:02 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:02 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:02 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /mnt/disks/mlperf-scratch/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:02 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_1e4193e1'), local_subscribe_addr='ipc:///tmp/1d7b8723-cb48-4719-8f4b-7b1391b9f2fa', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:02 [parallel_state.py:1065] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 3
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:02 [parallel_state.py:1065] rank 2 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 2, EP rank 2
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:02 [parallel_state.py:1065] rank 1 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:02 [parallel_state.py:1065] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorker rank=2 pid=93690)[0;0m WARNING 06-25 15:51:07 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:07 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:07 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:07 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:07 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m WARNING 06-25 15:51:07 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:07 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=0 pid=93688)[0;0m WARNING 06-25 15:51:08 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:08 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:08 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:08 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:08 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:08 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:08 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:08 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:08 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=3 pid=93691)[0;0m WARNING 06-25 15:51:08 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:08 [gpu_model_runner.py:1595] Starting to load model google/gemma-3-27b-it...
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:08 [gpu_model_runner.py:1600] Loading model from scratch...
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:08 [cuda.py:246] FlashInfer failed to import for V1 engine on Blackwell (SM 10.0) GPUs; it is recommended to install FlashInfer for better performance.
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:08 [cuda.py:252] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:08 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:08 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:08 [weight_utils.py:292] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:12 [default_loader.py:272] Loading weights took 3.83 seconds
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:12 [gpu_model_runner.py:1624] Model loading took 7.1353 GiB and 4.299608 seconds
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:13 [default_loader.py:272] Loading weights took 4.53 seconds
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:13 [default_loader.py:272] Loading weights took 4.54 seconds
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:13 [gpu_model_runner.py:1624] Model loading took 7.1353 GiB and 5.020724 seconds
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:13 [default_loader.py:272] Loading weights took 4.54 seconds
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:13 [gpu_model_runner.py:1624] Model loading took 7.1353 GiB and 5.263781 seconds
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:13 [gpu_model_runner.py:1624] Model loading took 7.1353 GiB and 5.092318 seconds
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:14 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:14 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:14 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:14 [gpu_model_runner.py:1978] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:30 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/eba6bb5ae8/rank_3_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:30 [backends.py:472] Dynamo bytecode transform time: 14.58 s
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:31 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/eba6bb5ae8/rank_1_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:31 [backends.py:472] Dynamo bytecode transform time: 14.60 s
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:31 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/eba6bb5ae8/rank_2_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:31 [backends.py:472] Dynamo bytecode transform time: 14.65 s
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:31 [backends.py:462] Using cache directory: /mnt/disks/mlperf-scratch/torch_compile_cache/eba6bb5ae8/rank_0_0 for vLLM's torch.compile
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:31 [backends.py:472] Dynamo bytecode transform time: 14.81 s
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:51:35 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:51:35 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:51:35 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:51:35 [backends.py:161] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:52:24 [backends.py:173] Compiling a graph for general shape takes 52.90 s
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:52:25 [backends.py:173] Compiling a graph for general shape takes 53.16 s
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:52:25 [backends.py:173] Compiling a graph for general shape takes 53.37 s
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:52:25 [backends.py:173] Compiling a graph for general shape takes 53.45 s
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:53:11 [monitor.py:34] torch.compile takes 67.97 s in total
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:53:11 [monitor.py:34] torch.compile takes 67.74 s in total
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:53:11 [monitor.py:34] torch.compile takes 68.27 s in total
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:53:11 [monitor.py:34] torch.compile takes 67.55 s in total
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:53:13 [gpu_worker.py:227] Available KV cache memory: 140.15 GiB
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:53:13 [gpu_worker.py:227] Available KV cache memory: 140.15 GiB
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:53:13 [gpu_worker.py:227] Available KV cache memory: 140.46 GiB
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:53:14 [gpu_worker.py:227] Available KV cache memory: 140.21 GiB
WARNING 06-25 15:53:14 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:53:14 [kv_cache_utils.py:870] GPU KV cache size: 1,050,144 tokens
INFO 06-25 15:53:14 [kv_cache_utils.py:874] Maximum concurrency for 8,192 tokens per request: 127.98x
WARNING 06-25 15:53:14 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:53:14 [kv_cache_utils.py:870] GPU KV cache size: 1,049,680 tokens
INFO 06-25 15:53:14 [kv_cache_utils.py:874] Maximum concurrency for 8,192 tokens per request: 127.92x
WARNING 06-25 15:53:14 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:53:14 [kv_cache_utils.py:870] GPU KV cache size: 1,049,680 tokens
INFO 06-25 15:53:14 [kv_cache_utils.py:874] Maximum concurrency for 8,192 tokens per request: 127.92x
WARNING 06-25 15:53:14 [kv_cache_utils.py:830] Add 8 padding layers, may waste at most 15.38% KV cache memory
INFO 06-25 15:53:14 [kv_cache_utils.py:870] GPU KV cache size: 1,052,016 tokens
INFO 06-25 15:53:14 [kv_cache_utils.py:874] Maximum concurrency for 8,192 tokens per request: 128.21x
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:53:41 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:53:44 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:53:45 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:53:50 [custom_all_reduce.py:196] Registering 8308 cuda graph addresses
[1;36m(VllmWorker rank=3 pid=93691)[0;0m INFO 06-25 15:53:50 [gpu_model_runner.py:2048] Graph capturing finished in 36 secs, took 1.19 GiB
[1;36m(VllmWorker rank=0 pid=93688)[0;0m INFO 06-25 15:53:50 [gpu_model_runner.py:2048] Graph capturing finished in 36 secs, took 1.19 GiB
[1;36m(VllmWorker rank=1 pid=93689)[0;0m INFO 06-25 15:53:50 [gpu_model_runner.py:2048] Graph capturing finished in 36 secs, took 1.19 GiB
[1;36m(VllmWorker rank=2 pid=93690)[0;0m INFO 06-25 15:53:50 [gpu_model_runner.py:2048] Graph capturing finished in 36 secs, took 1.19 GiB
INFO 06-25 15:53:50 [core.py:171] init engine (profile, create kv cache, warmup model) took 156.31 seconds
ERROR 06-25 15:54:13 [dump_input.py:69] Dumping input data
ERROR 06-25 15:54:13 [dump_input.py:71] V1 LLM engine (v0.9.1) with config: model='google/gemma-3-27b-it', speculative_config=None, tokenizer='google/gemma-3-27b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=fp8, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=google/gemma-3-27b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}, 
ERROR 06-25 15:54:13 [dump_input.py:79] Dumping scheduler output for model execution:
ERROR 06-25 15:54:13 [dump_input.py:80] SchedulerOutput(scheduled_new_reqs=[], scheduled_cached_reqs=[CachedRequestData(req_id='0', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4200), CachedRequestData(req_id='1', resumed_from_preemption=false, new_token_ids=[236770], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4199), CachedRequestData(req_id='2', resumed_from_preemption=false, new_token_ids=[3805], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4184), CachedRequestData(req_id='3', resumed_from_preemption=false, new_token_ids=[236857], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4199), CachedRequestData(req_id='4', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4199), CachedRequestData(req_id='5', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4198), CachedRequestData(req_id='6', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4198), CachedRequestData(req_id='7', resumed_from_preemption=false, new_token_ids=[237329], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4198), CachedRequestData(req_id='8', resumed_from_preemption=false, new_token_ids=[15579], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4198), CachedRequestData(req_id='9', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4197), CachedRequestData(req_id='10', resumed_from_preemption=false, new_token_ids=[244443], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4197), CachedRequestData(req_id='11', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4197), CachedRequestData(req_id='12', resumed_from_preemption=false, new_token_ids=[381], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4197), CachedRequestData(req_id='13', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4196), CachedRequestData(req_id='14', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4196), CachedRequestData(req_id='15', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4196), CachedRequestData(req_id='16', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4195), CachedRequestData(req_id='17', resumed_from_preemption=false, new_token_ids=[236779], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4195), CachedRequestData(req_id='18', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4195), CachedRequestData(req_id='19', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4195), CachedRequestData(req_id='20', resumed_from_preemption=false, new_token_ids=[625], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4194), CachedRequestData(req_id='21', resumed_from_preemption=false, new_token_ids=[464], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4191), CachedRequestData(req_id='22', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4194), CachedRequestData(req_id='23', resumed_from_preemption=false, new_token_ids=[12139], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4194), CachedRequestData(req_id='24', resumed_from_preemption=false, new_token_ids=[236761], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4193), CachedRequestData(req_id='25', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4193), CachedRequestData(req_id='26', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4193), CachedRequestData(req_id='27', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4193), CachedRequestData(req_id='28', resumed_from_preemption=false, new_token_ids=[1678], new_block_ids=[[365450], [365451], [365452], [365453], [365454], [365455], [365456]], num_computed_tokens=4192), CachedRequestData(req_id='29', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365457], [365458], [365459], [365460], [365461], [365462], [365463]], num_computed_tokens=4192), CachedRequestData(req_id='30', resumed_from_preemption=false, new_token_ids=[14912], new_block_ids=[[365464], [365465], [365466], [365467], [365468], [365469], [365470]], num_computed_tokens=4192), CachedRequestData(req_id='31', resumed_from_preemption=false, new_token_ids=[378], new_block_ids=[[365471], [365472], [365473], [365474], [365475], [365476], [365477]], num_computed_tokens=4192), CachedRequestData(req_id='32', resumed_from_preemption=false, new_token_ids=[101478], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4191), CachedRequestData(req_id='33', resumed_from_preemption=false, new_token_ids=[529], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4191), CachedRequestData(req_id='34', resumed_from_preemption=false, new_token_ids=[7334], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4190), CachedRequestData(req_id='35', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4191), CachedRequestData(req_id='36', resumed_from_preemption=false, new_token_ids=[8538], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4190), CachedRequestData(req_id='37', resumed_from_preemption=false, new_token_ids=[463], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4173), CachedRequestData(req_id='38', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4190), CachedRequestData(req_id='39', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4190), CachedRequestData(req_id='40', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4189), CachedRequestData(req_id='41', resumed_from_preemption=false, new_token_ids=[3618], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4189), CachedRequestData(req_id='42', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4189), CachedRequestData(req_id='43', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4189), CachedRequestData(req_id='44', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4188), CachedRequestData(req_id='45', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4188), CachedRequestData(req_id='46', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4188), CachedRequestData(req_id='47', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4188), CachedRequestData(req_id='48', resumed_from_preemption=false, new_token_ids=[412], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4187), CachedRequestData(req_id='49', resumed_from_preemption=false, new_token_ids=[16838], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4187), CachedRequestData(req_id='50', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4187), CachedRequestData(req_id='51', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4187), CachedRequestData(req_id='52', resumed_from_preemption=false, new_token_ids=[132744], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4186), CachedRequestData(req_id='53', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4186), CachedRequestData(req_id='54', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4171), CachedRequestData(req_id='55', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4186), CachedRequestData(req_id='56', resumed_from_preemption=false, new_token_ids=[529], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4185), CachedRequestData(req_id='57', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4185), CachedRequestData(req_id='58', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4185), CachedRequestData(req_id='59', resumed_from_preemption=false, new_token_ids=[236887], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4185), CachedRequestData(req_id='60', resumed_from_preemption=false, new_token_ids=[236761], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4184), CachedRequestData(req_id='61', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4184), CachedRequestData(req_id='62', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4184), CachedRequestData(req_id='63', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=3947), CachedRequestData(req_id='64', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4183), CachedRequestData(req_id='65', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4183), CachedRequestData(req_id='66', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4183), CachedRequestData(req_id='67', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4183), CachedRequestData(req_id='68', resumed_from_preemption=false, new_token_ids=[66938], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4182), CachedRequestData(req_id='69', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4182), CachedRequestData(req_id='70', resumed_from_preemption=false, new_token_ids=[3496], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4182), CachedRequestData(req_id='71', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4182), CachedRequestData(req_id='72', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4181), CachedRequestData(req_id='73', resumed_from_preemption=false, new_token_ids=[210], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4181), CachedRequestData(req_id='74', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4181), CachedRequestData(req_id='75', resumed_from_preemption=false, new_token_ids=[399], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4181), CachedRequestData(req_id='76', resumed_from_preemption=false, new_token_ids=[236761], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4180), CachedRequestData(req_id='77', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4180), CachedRequestData(req_id='78', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4180), CachedRequestData(req_id='79', resumed_from_preemption=false, new_token_ids=[37369], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4180), CachedRequestData(req_id='80', resumed_from_preemption=false, new_token_ids=[236927], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4179), CachedRequestData(req_id='81', resumed_from_preemption=false, new_token_ids=[6676], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4179), CachedRequestData(req_id='82', resumed_from_preemption=false, new_token_ids=[463], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4179), CachedRequestData(req_id='83', resumed_from_preemption=false, new_token_ids=[236861], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4179), CachedRequestData(req_id='84', resumed_from_preemption=false, new_token_ids=[478], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4178), CachedRequestData(req_id='85', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4178), CachedRequestData(req_id='86', resumed_from_preemption=false, new_token_ids=[6921], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4178), CachedRequestData(req_id='87', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4178), CachedRequestData(req_id='88', resumed_from_preemption=false, new_token_ids=[27832], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4177), CachedRequestData(req_id='89', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4177), CachedRequestData(req_id='90', resumed_from_preemption=false, new_token_ids=[237226], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4177), CachedRequestData(req_id='91', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4177), CachedRequestData(req_id='92', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365478], [365479], [365480], [365481], [365482], [365483], [365484]], num_computed_tokens=4176), CachedRequestData(req_id='93', resumed_from_preemption=false, new_token_ids=[236759], new_block_ids=[[365485], [365486], [365487], [365488], [365489], [365490], [365491]], num_computed_tokens=4176), CachedRequestData(req_id='94', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365492], [365493], [365494], [365495], [365496], [365497], [365498]], num_computed_tokens=4176), CachedRequestData(req_id='95', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365499], [365500], [365501], [365502], [365503], [365504], [365505]], num_computed_tokens=4176), CachedRequestData(req_id='96', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4175), CachedRequestData(req_id='97', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4175), CachedRequestData(req_id='98', resumed_from_preemption=false, new_token_ids=[25890], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4175), CachedRequestData(req_id='99', resumed_from_preemption=false, new_token_ids=[8739], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4175), CachedRequestData(req_id='100', resumed_from_preemption=false, new_token_ids=[6810], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4174), CachedRequestData(req_id='101', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4174), CachedRequestData(req_id='102', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4174), CachedRequestData(req_id='103', resumed_from_preemption=false, new_token_ids=[3937], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4174), CachedRequestData(req_id='104', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4173), CachedRequestData(req_id='105', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4173), CachedRequestData(req_id='106', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4173), CachedRequestData(req_id='107', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4173), CachedRequestData(req_id='108', resumed_from_preemption=false, new_token_ids=[54369], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4172), CachedRequestData(req_id='109', resumed_from_preemption=false, new_token_ids=[236779], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4172), CachedRequestData(req_id='110', resumed_from_preemption=false, new_token_ids=[237044], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4172), CachedRequestData(req_id='111', resumed_from_preemption=false, new_token_ids=[383], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4172), CachedRequestData(req_id='112', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4171), CachedRequestData(req_id='113', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4171), CachedRequestData(req_id='114', resumed_from_preemption=false, new_token_ids=[2238], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4171), CachedRequestData(req_id='115', resumed_from_preemption=false, new_token_ids=[8701], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4171), CachedRequestData(req_id='116', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4170), CachedRequestData(req_id='117', resumed_from_preemption=false, new_token_ids=[107], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4170), CachedRequestData(req_id='118', resumed_from_preemption=false, new_token_ids=[13666], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4170), CachedRequestData(req_id='119', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4170), CachedRequestData(req_id='120', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4169), CachedRequestData(req_id='121', resumed_from_preemption=false, new_token_ids=[236831], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4169), CachedRequestData(req_id='122', resumed_from_preemption=false, new_token_ids=[7788], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4169), CachedRequestData(req_id='123', resumed_from_preemption=false, new_token_ids=[3304], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4169), CachedRequestData(req_id='124', resumed_from_preemption=false, new_token_ids=[6494], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4168), CachedRequestData(req_id='125', resumed_from_preemption=false, new_token_ids=[655], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4168), CachedRequestData(req_id='126', resumed_from_preemption=false, new_token_ids=[236761], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=3889), CachedRequestData(req_id='127', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4168), CachedRequestData(req_id='128', resumed_from_preemption=false, new_token_ids=[16769], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4167), CachedRequestData(req_id='129', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4167), CachedRequestData(req_id='130', resumed_from_preemption=false, new_token_ids=[464], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4167), CachedRequestData(req_id='131', resumed_from_preemption=false, new_token_ids=[107], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4167), CachedRequestData(req_id='132', resumed_from_preemption=false, new_token_ids=[2200], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4166), CachedRequestData(req_id='133', resumed_from_preemption=false, new_token_ids=[1031], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4166), CachedRequestData(req_id='134', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4166), CachedRequestData(req_id='135', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4166), CachedRequestData(req_id='136', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4165), CachedRequestData(req_id='137', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4165), CachedRequestData(req_id='138', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4165), CachedRequestData(req_id='139', resumed_from_preemption=false, new_token_ids=[15579], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4165), CachedRequestData(req_id='140', resumed_from_preemption=false, new_token_ids=[416], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4163), CachedRequestData(req_id='141', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4164), CachedRequestData(req_id='142', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4164), CachedRequestData(req_id='143', resumed_from_preemption=false, new_token_ids=[625], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4164), CachedRequestData(req_id='144', resumed_from_preemption=false, new_token_ids=[740], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4163), CachedRequestData(req_id='145', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4163), CachedRequestData(req_id='146', resumed_from_preemption=false, new_token_ids=[236761], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4163), CachedRequestData(req_id='147', resumed_from_preemption=false, new_token_ids=[236848], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4163), CachedRequestData(req_id='148', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4162), CachedRequestData(req_id='149', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4162), CachedRequestData(req_id='150', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4162), CachedRequestData(req_id='151', resumed_from_preemption=false, new_token_ids=[2712], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4162), CachedRequestData(req_id='152', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4161), CachedRequestData(req_id='153', resumed_from_preemption=false, new_token_ids=[236751], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4161), CachedRequestData(req_id='154', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4161), CachedRequestData(req_id='155', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4161), CachedRequestData(req_id='156', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365506], [365507], [365508], [365509], [365510], [365511], [365512]], num_computed_tokens=4160), CachedRequestData(req_id='157', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365513], [365514], [365515], [365516], [365517], [365518], [365519]], num_computed_tokens=4160), CachedRequestData(req_id='158', resumed_from_preemption=false, new_token_ids=[623], new_block_ids=[[365520], [365521], [365522], [365523], [365524], [365525], [365526]], num_computed_tokens=4160), CachedRequestData(req_id='159', resumed_from_preemption=false, new_token_ids=[380], new_block_ids=[[365527], [365528], [365529], [365530], [365531], [365532], [365533]], num_computed_tokens=4160), CachedRequestData(req_id='160', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4159), CachedRequestData(req_id='161', resumed_from_preemption=false, new_token_ids=[241919], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4159), CachedRequestData(req_id='162', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4159), CachedRequestData(req_id='163', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4159), CachedRequestData(req_id='164', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4158), CachedRequestData(req_id='165', resumed_from_preemption=false, new_token_ids=[419], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4158), CachedRequestData(req_id='166', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4158), CachedRequestData(req_id='167', resumed_from_preemption=false, new_token_ids=[236788], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4158), CachedRequestData(req_id='168', resumed_from_preemption=false, new_token_ids=[61817], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4157), CachedRequestData(req_id='169', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4157), CachedRequestData(req_id='170', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4157), CachedRequestData(req_id='171', resumed_from_preemption=false, new_token_ids=[1018], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4157), CachedRequestData(req_id='172', resumed_from_preemption=false, new_token_ids=[529], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4156), CachedRequestData(req_id='173', resumed_from_preemption=false, new_token_ids=[529], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4156), CachedRequestData(req_id='174', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4156), CachedRequestData(req_id='175', resumed_from_preemption=false, new_token_ids=[237434], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4156), CachedRequestData(req_id='176', resumed_from_preemption=false, new_token_ids=[25890], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4155), CachedRequestData(req_id='177', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4155), CachedRequestData(req_id='178', resumed_from_preemption=false, new_token_ids=[412], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4155), CachedRequestData(req_id='179', resumed_from_preemption=false, new_token_ids=[236743], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4140), CachedRequestData(req_id='180', resumed_from_preemption=false, new_token_ids=[31368], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4154), CachedRequestData(req_id='181', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4154), CachedRequestData(req_id='182', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4154), CachedRequestData(req_id='183', resumed_from_preemption=false, new_token_ids=[995], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4154), CachedRequestData(req_id='184', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[365534], [365535], [365536], [365537], [365538], [365539], [365540]], num_computed_tokens=3904), CachedRequestData(req_id='185', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4153), CachedRequestData(req_id='186', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4153), CachedRequestData(req_id='187', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4153), CachedRequestData(req_id='188', resumed_from_preemption=false, new_token_ids=[39881], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4152), CachedRequestData(req_id='189', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4152), CachedRequestData(req_id='190', resumed_from_preemption=false, new_token_ids=[2606], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4152), CachedRequestData(req_id='191', resumed_from_preemption=false, new_token_ids=[236749], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4152), CachedRequestData(req_id='192', resumed_from_preemption=false, new_token_ids=[236878], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4151), CachedRequestData(req_id='193', resumed_from_preemption=false, new_token_ids=[196995], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=3898), CachedRequestData(req_id='194', resumed_from_preemption=false, new_token_ids=[464], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4151), CachedRequestData(req_id='195', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4151), CachedRequestData(req_id='196', resumed_from_preemption=false, new_token_ids=[1817], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4150), CachedRequestData(req_id='197', resumed_from_preemption=false, new_token_ids=[106], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4150), CachedRequestData(req_id='198', resumed_from_preemption=false, new_token_ids=[7044], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4150), CachedRequestData(req_id='199', resumed_from_preemption=false, new_token_ids=[5213], new_block_ids=[[], [], [], [], [], [], []], num_computed_tokens=4150)], num_scheduled_tokens={167: 1, 168: 1, 102: 1, 62: 1, 103: 1, 55: 1, 82: 1, 181: 1, 39: 1, 159: 1, 20: 1, 46: 1, 92: 1, 166: 1, 178: 1, 113: 1, 134: 1, 193: 1, 190: 1, 77: 1, 85: 1, 110: 1, 101: 1, 164: 1, 56: 1, 184: 1, 87: 1, 125: 1, 11: 1, 133: 1, 16: 1, 192: 1, 41: 1, 180: 1, 130: 1, 45: 1, 4: 1, 27: 1, 80: 1, 90: 1, 109: 1, 199: 1, 158: 1, 160: 1, 149: 1, 8: 1, 0: 1, 118: 1, 106: 1, 198: 1, 140: 1, 171: 1, 36: 1, 89: 1, 163: 1, 143: 1, 29: 1, 34: 1, 49: 1, 74: 1, 6: 1, 19: 1, 50: 1, 151: 1, 97: 1, 111: 1, 52: 1, 72: 1, 129: 1, 116: 1, 81: 1, 150: 1, 169: 1, 161: 1, 7: 1, 65: 1, 32: 1, 38: 1, 44: 1, 100: 1, 131: 1, 187: 1, 139: 1, 162: 1, 42: 1, 24: 1, 84: 1, 98: 1, 194: 1, 182: 1, 132: 1, 177: 1, 147: 1, 172: 1, 63: 1, 79: 1, 30: 1, 2: 1, 124: 1, 61: 1, 68: 1, 43: 1, 48: 1, 104: 1, 127: 1, 138: 1, 176: 1, 152: 1, 40: 1, 188: 1, 35: 1, 76: 1, 137: 1, 153: 1, 185: 1, 54: 1, 51: 1, 121: 1, 59: 1, 123: 1, 83: 1, 5: 1, 174: 1, 148: 1, 186: 1, 22: 1, 144: 1, 128: 1, 53: 1, 28: 1, 142: 1, 9: 1, 156: 1, 117: 1, 73: 1, 10: 1, 13: 1, 173: 1, 18: 1, 88: 1, 17: 1, 93: 1, 155: 1, 195: 1, 67: 1, 70: 1, 189: 1, 12: 1, 120: 1, 105: 1, 71: 1, 165: 1, 69: 1, 141: 1, 3: 1, 23: 1, 37: 1, 154: 1, 99: 1, 60: 1, 108: 1, 66: 1, 14: 1, 33: 1, 157: 1, 191: 1, 25: 1, 119: 1, 112: 1, 94: 1, 135: 1, 26: 1, 78: 1, 107: 1, 196: 1, 15: 1, 114: 1, 197: 1, 21: 1, 91: 1, 1: 1, 57: 1, 95: 1, 86: 1, 75: 1, 146: 1, 31: 1, 96: 1, 183: 1, 47: 1, 170: 1, 64: 1, 179: 1, 115: 1, 58: 1, 136: 1, 145: 1, 175: 1, 126: 1, 122: 1}, total_num_scheduled_tokens=200, scheduled_spec_decode_tokens={}, scheduled_encoder_inputs={}, num_common_prefix_blocks=[0, 0, 0, 0, 0, 0, 0], finished_req_ids=[], free_encoder_input_ids=[], structured_output_request_ids={}, grammar_bitmask=null, kv_connector_metadata=null)
ERROR 06-25 15:54:13 [dump_input.py:82] SchedulerStats(num_running_reqs=200, num_waiting_reqs=0, gpu_cache_usage=0.2834020703861614, prefix_cache_stats=PrefixCacheStats(reset=False, requests=0, queries=0, hits=0), spec_decoding_stats=None)

--- STDERR ---
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=1 pid=93689)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=2 pid=93690)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=3 pid=93691)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/12 [00:00<?, ?it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  17% Completed | 2/12 [00:00<00:02,  4.19it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  25% Completed | 3/12 [00:00<00:02,  3.15it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  33% Completed | 4/12 [00:01<00:02,  2.81it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  42% Completed | 5/12 [00:01<00:02,  2.64it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  50% Completed | 6/12 [00:02<00:02,  2.56it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  58% Completed | 7/12 [00:02<00:01,  2.73it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  67% Completed | 8/12 [00:02<00:01,  2.63it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  75% Completed | 9/12 [00:03<00:01,  2.57it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  83% Completed | 10/12 [00:03<00:00,  2.54it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards:  92% Completed | 11/12 [00:04<00:00,  2.52it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards: 100% Completed | 12/12 [00:04<00:00,  2.50it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m Loading safetensors checkpoint shards: 100% Completed | 12/12 [00:04<00:00,  2.66it/s]
[1;36m(VllmWorker rank=0 pid=93688)[0;0m 
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
Adding requests:   0%|          | 0/200 [00:00<?, ?it/s]Adding requests:   4%|▍         | 9/200 [00:00<00:02, 89.05it/s]Adding requests:  10%|█         | 21/200 [00:00<00:01, 102.86it/s]Adding requests:  16%|█▋        | 33/200 [00:00<00:01, 108.75it/s]Adding requests:  22%|██▏       | 44/200 [00:00<00:01, 109.21it/s]Adding requests:  28%|██▊       | 56/200 [00:00<00:01, 111.91it/s]Adding requests:  34%|███▍      | 68/200 [00:00<00:01, 109.40it/s]Adding requests:  40%|████      | 80/200 [00:00<00:01, 109.18it/s]Adding requests:  46%|████▋     | 93/200 [00:00<00:00, 114.08it/s]Adding requests:  52%|█████▎    | 105/200 [00:00<00:00, 111.99it/s]Adding requests:  58%|█████▊    | 117/200 [00:01<00:00, 110.78it/s]Adding requests:  64%|██████▍   | 129/200 [00:01<00:00, 112.03it/s]Adding requests:  71%|███████   | 142/200 [00:01<00:00, 115.25it/s]Adding requests:  77%|███████▋  | 154/200 [00:01<00:00, 110.02it/s]Adding requests:  83%|████████▎ | 166/200 [00:01<00:00, 110.61it/s]Adding requests:  89%|████████▉ | 178/200 [00:01<00:00, 112.60it/s]Adding requests:  95%|█████████▌| 190/200 [00:01<00:00, 114.01it/s]Adding requests: 100%|██████████| 200/200 [00:01<00:00, 111.18it/s]
Processed prompts:   0%|          | 0/200 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Traceback (most recent call last):
  File "/home/pirillo_google_com/vllm_benchmark/vllm-repo-benchmark/benchmarks/benchmark_throughput.py", line 724, in <module>
    main(args)
  File "/home/pirillo_google_com/vllm_benchmark/vllm-repo-benchmark/benchmarks/benchmark_throughput.py", line 407, in main
    elapsed_time, request_outputs = run_vllm(
                                    ^^^^^^^^^
  File "/home/pirillo_google_com/vllm_benchmark/vllm-repo-benchmark/benchmarks/benchmark_throughput.py", line 92, in run_vllm
    outputs = llm.generate(
              ^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/utils.py", line 1267, in inner
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 474, in generate
    outputs = self._run_engine(use_tqdm=use_tqdm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 1517, in _run_engine
    step_outputs = self.llm_engine.step()
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/v1/engine/llm_engine.py", line 236, in step
    processed_outputs = self.output_processor.process_outputs(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/v1/engine/output_processor.py", line 351, in process_outputs
    stop_string = req_state.detokenizer.update(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/v1/engine/detokenizer.py", line 107, in update
    self.output_text += self.decode_next(new_token_id)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pirillo_google_com/.vllm/lib/python3.12/site-packages/vllm/v1/engine/detokenizer.py", line 202, in decode_next
    token = self.stream.step(self.tokenizer, next_token_id)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Exception: Invalid prefix encountered
Processed prompts:   0%|          | 0/200 [00:19<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
